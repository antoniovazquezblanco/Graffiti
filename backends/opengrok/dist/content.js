(()=>{"use strict";var e={450:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(630),r=[new(o(n(952)).default)];!function(){const e=document.createElement("script"),t=chrome.runtime.getURL("js/injected_to_page.js");e.src=t,e.onload=function(){this.remove()},(document.head||document.documentElement).appendChild(e),(0,s.onExtMessageEx)(((e,t)=>{if("getSymbolRequest"!==e.action)t({isCorrectWebsite:!1,info:null});else{const n=parseInt(document.body.getAttribute("contextMenuY")||"0"),o=parseInt(document.body.getAttribute("regularY")||"0"),s=parseInt(document.body.getAttribute("contextMenuX")||"0"),l=parseInt(document.body.getAttribute("regularX")||"0"),[i,u]="contextMenu"==e.source?[s,n]:[l,o];for(const n of r){if(!n.isSupported())continue;const o=(e.isLine?n.getCurrentLineSymbol:n.getCurrentSymbol)(i,u);if(null!=o&&e.askForEdgeText){const e=prompt("Enter edge text","");null!=e&&(o.edgeLabel=e)}return void t({isCorrectWebsite:!0,info:o})}t({isCorrectWebsite:!1,info:null})}}))}()},952:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{isSupported(){return 0!=document.querySelectorAll("#whole_header").length}getCurrentSymbol(e,t){var n;let o=document.elementFromPoint(e,t);if(null==o||!(null===(n=document.getElementById("content"))||void 0===n?void 0:n.contains(o)))return null;const s=o.closest(".scope-body, .scope-head");if(null==s)return null;const r=s.classList.contains("scope-body")?s.previousElementSibling:s;if(null==r)return null;const l=r.firstChild,i=document.querySelector("#Masthead > a:last-of-type");let u=r.querySelector("a.l");null==u&&(u=r.querySelector("a.hl"));const c=new URL(document.location.href);c.hash="#"+u.getAttribute("name");let a=l.textContent;return a.includes("(")&&(a=a.substring(0,a.indexOf("(")).trim()),{sig:a,fileName:i.textContent,site:c.host,line:parseInt(u.getAttribute("name")),address:c.toString()}}getCurrentLineSymbol(e,t){var n;let o=document.elementFromPoint(e,t);if(null==o||!(null===(n=document.getElementById("content"))||void 0===n?void 0:n.contains(o)))return null;for(;o&&!o.classList.contains("l")&&!o.classList.contains("hl");)o=o.previousElementSibling;if(null==o)return null;const s=document.querySelector("#Masthead > a:last-of-type"),r=parseInt(o.getAttribute("name")),l=new URL(document.location.href);l.hash="#"+r;let i=null;const u=o.closest(".scope-body, .scope-head");return null!=u&&(i=(u.classList.contains("scope-body")?u.previousElementSibling:u).firstChild.textContent,i.includes("(")&&(i=i.substring(0,i.indexOf("(")).trim())),{sig:i,fileName:s.textContent,site:l.host,line:r,address:l.toString()}}}},630:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.onExtMessageEx=t.onExtMessage=t.sendExtMessage=t.setPrefs=t.getPrefs=void 0;const n={tabBehavior:"alwaysNew"};t.getPrefs=function(e){chrome.storage.local.get(Object.keys(n)).then((t=>e(Object.assign(Object.assign({},n),t))))},t.setPrefs=function(e){chrome.storage.local.set(e)},t.sendExtMessage=function(e){return chrome.runtime.sendMessage(e)},t.onExtMessage=function(e){chrome.runtime.onMessage.addListener(((t,n,o)=>(e(t),o({}),!0)))},t.onExtMessageEx=function(e){chrome.runtime.onMessage.addListener(((t,n,o)=>e(t,o)))}}},t={};!function n(o){var s=t[o];if(void 0!==s)return s.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,n),r.exports}(450)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,