(()=>{"use strict";var e={630:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.onExtMessageEx=t.onExtMessage=t.sendExtMessage=t.setPrefs=t.getPrefs=void 0;const n={tabBehavior:"alwaysNew"};t.getPrefs=function(e){chrome.storage.local.get(Object.keys(n)).then((t=>e(Object.assign(Object.assign({},n),t))))},t.setPrefs=function(e){chrome.storage.local.set(e)},t.sendExtMessage=function(e){return chrome.runtime.sendMessage(e)},t.onExtMessage=function(e){chrome.runtime.onMessage.addListener(((t,n,s)=>(e(t),s({}),!0)))},t.onExtMessageEx=function(e){chrome.runtime.onMessage.addListener(((t,n,s)=>e(t,s)))}}},t={};function n(s){var o=t[s];if(void 0!==o)return o.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,n),r.exports}(()=>{const e=n(630);function t(e){return document.getElementById(e)}(0,e.getPrefs)((e=>{t(e.tabBehavior).checked=!0})),document.getElementsByName("open_in_chrome_behavior").forEach((t=>{t.addEventListener("change",(t=>{(0,e.setPrefs)({tabBehavior:t.target.id})}))})),document.getElementById("connectBtn").onclick=n=>{(0,e.sendExtMessage)({action:"connectPull",addr:t("socketUrl").value})},(0,e.onExtMessage)((e=>{"getConnectionPullResult"==e.action&&(e.status?document.getElementById("connectBtn").style.backgroundColor="green":document.getElementById("connectBtn").style.backgroundColor="red")})),(0,e.sendExtMessage)({action:"getConnectionPullRequest"})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,